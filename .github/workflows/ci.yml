name: CI

on:
  push:
    branches:
      - develop
  pull_request:
    branches:
      - develop

jobs:
  lint:
    name: Lint check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: '14.x'
      - run: yarn install
      - run: yarn lint

  build-check:
    name: Build check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: '14.x'
      - run: yarn install
      - run: yarn build-lib

  package-version-check:
    name: Package Version Check
    runs-on: ubuntu-latest
    steps: 
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Semver Release
        uses: K-Phoen/semver-release-action@v1.2.0
      - name: Get hosted version
        run: |
          HOSTED_VERSION=$(npm view @hikaya/hakawati@latest version)
          echo "Hosted version: ${HOSTED_VERSION}"
      - name: Get current version
        run: |
          CURRENT_VERSION=$(jq -r '.version' package.json)
          echo "Current version: ${CURRENT_VERSION}"
      - name: Check version
        run: |
          if semver -r ">${HOSTED_VERSION}" "${CURRENT_VERSION}" && semver -p --include-prerelease "rc" "${CURRENT_VERSION}"; then
            echo "Version has been incremented and is a prerelease with rc prefix"
          elif semver -r "${CURRENT_VERSION}" "${HOSTED_VERSION}" && semver -p "${CURRENT_VERSION}"; then
            echo "Version has been downgraded or not incremented and is a valid version"
          else
            echo "Invalid version"
          fi


  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v2
  #     - id: check # This will be the reference for getting the outputs.
  #       uses: EndBug/version-check@v2.1.1 # You can choose the version/branch you prefer.
  #       with:
  #         file-url: https://unpkg.com/@hikaya/hakawati@latest/package.json
  #         static-checking: localIsNew
  #     - name: Log when changed
  #       if: steps.check.outputs.changed == 'true'
  #       run: 'echo "New version: ${{ steps.check.outputs.version }} (${{ steps.check.outputs.type }})"'

  #     - name: Log when unchanged
  #       if: steps.check.outputs.changed == 'false'
  #       run: |
  #         'echo "No change to version number in package.json file"'
  #         'exit 1'

  build-publish:
    name: Publish build to NPM registry
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 14
          registry-url: https://registry.npmjs.org/
      - run: |
          if [[ $GITHUB_EVENT_NAME != "pull_request" ]]; then
            yarn install
            yarn build-lib
            yarn publish --access=public
          else
            echo "+++++ No Publish on PR event +++++++++"
          fi
        env:
          NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}
